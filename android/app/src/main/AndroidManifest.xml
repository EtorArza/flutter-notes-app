<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.etorarza.frek">

    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:label="Frek"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTask"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>



            <!--
                https://pub.dev/packages/receive_sharing_intent
                https://stackoverflow.com/questions/1733195/android-intent-filter-for-a-particular-file-extension 
            -->


            <!--
                Capture file open requests (pathPattern is honoured) where no
                MIME type is provided in the Intent.  An Intent with a null
                MIME type will never be matched by a filter with a set MIME
                type, so we need a second intent-filter if we wish to also
                match files with this extension and a non-null MIME type
                (even if it is non-null but zero length).
            -->
            <intent-filter
                android:icon="@drawable/logo"
                android:label="@string/app_name"
                android:priority="50" >
                <action android:name="android.intent.action.VIEW" />
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="file"/>
                <data android:host="*" />

                <!--
                    Work around Android's ugly primitive PatternMatcher
                    implementation that can't cope with finding a . early in
                    the path unless it's explicitly matched.
                -->
                <data android:pathPattern=".*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.FrekDB\\.bin" />
            </intent-filter>

            <!--
                Capture file open requests (pathPattern is honoured) where a
                (possibly blank) MIME type is provided in the Intent.  This
                filter may only be necessary for supporting ES File Explorer,
                which has the probably buggy behaviour of using an Intent
                with a MIME type that is set but zero-length.  It's
                impossible to match such a type except by using a global
                wildcard.
            -->
            <intent-filter
                android:icon="@drawable/logo"
                android:label="@string/app_name"
                android:priority="50" >
                <action android:name="android.intent.action.VIEW" />
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="file" />
                <data android:host="*" />
                <data android:mimeType="*/*" />

                <!--
                    Work around Android's ugly primitive PatternMatcher
                    implementation that can't cope with finding a . early in
                    the path unless it's explicitly matched.
                -->
                <data android:pathPattern=".*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.FrekDB" />
                <data android:pathPattern=".*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.FrekDB\\.bin" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.FrekDB\\.bin" />
            </intent-filter>



            <!-- <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="*/*" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="*/*" />
            </intent-filter> -->

        </activity>
    </application>
</manifest>
